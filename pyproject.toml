[project]
name = "hueify_log_trace"
version = "0.0.1"
description = "Colored logging and tracebacks with filtering capabilities."
readme = "README.md"
authors = [{ name = "Suguru Yamamoto", email = "sgryjp@gmail.com" }]
requires-python = ">=3.9"
dependencies = []

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = ["mypy>=1.15.0", "pyright>=1.1.401", "ruff>=0.11.12"]

[tool.ruff.lint]
select = [
    "ARG",  # falke8-unused-arguments
    "ANN",  # flake8-annotations
    "B",    # flake8-bugbear
    "A",    # flake8-builtins
    "C4",   # flake8-comprehensions
    "EM",   # flake8-errormsg
    "FA",   # flake8-future-annotations
    "ISC",  # flake8-implicit-str-concat
    "ICN",  # flake8-import-conventions
    "LOG",  # flake8-logging
    "G",    # flake8-logging-format
    "INP",  # flake8-no-pep420
    "T20",  # flake8-print
    "PT",   # flake8-pytest-style
    "Q",    # flake8-quotes
    "RSE",  # flake8-raise
    "RET",  # flake8-return
    "SIM",  # flake8-simplify
    "TID",  # flake8-tidy-imports
    "TC",   # flake8-type-checking
    "PIE",  # flakei-pie
    "I",    # isort
    "C90",  # mccabe
    "N",    # pep8-naming
    "PERF", # perflint
    "E",    # pycodestyle (errors)
    "W",    # pycodestyle (warnings)
    "D",    # pydocstyle
    "F",    # pyflakes
    "PGH",  # pygrep-hooks
    "PL",   # pylint
    "UP",   # pyupgrade
    "FURB", # refurb
    "RUF",  # Ruff-specific rules
    "TRY",  # tryceratops
]
ignore = [
    # "COM812",
    "D203",   # incorrect-blank-line-before-class
    "D213",   # multi-line-summary-second-line
    # "E501",
]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.pyright]
typeCheckingMode = "strict"

[tool.mypy]
strict = true
